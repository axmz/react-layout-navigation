{"version":3,"sources":["../../src/handlers/levelBelowMove.tsx"],"names":["handlerPropsValidation","levelBelowMove","e","step","handlerProps","parentEl","currentTarget","currentIdx","target","tabIndex","parentLevel","parseInt","dataset","level","currentLevel","tabbables","querySelectorAll","l","length","nextIdx","nextElement","focus"],"mappings":"AACA,OAAOA,sBAAP,MAAmC,0BAAnC;AAEA,eAAe,SAASC,cAAT,CACbC,CADa,EACL;AACRC,IAFa,EAGbC,YAHa,EAIb;AACAJ,EAAAA,sBAAsB,CAACE,CAAD,EAAIE,YAAJ,CAAtB;AACA,QAAMC,QAAgC,GAAGH,CAAC,CAACI,aAA3C;AACA,MAAIC,UAAiB,GAAGL,CAAC,CAACM,MAAF,CAASC,QAAjC;AACA,QAAMC,WAAmB,GAAGC,QAAQ,CAACN,QAAQ,CAACO,OAAT,CAAiBC,KAAjB,IAA0B,IAA3B,CAApC;AACA,QAAMC,YAAoB,GAAGH,QAAQ,CAACT,CAAC,CAACM,MAAF,CAASI,OAAT,CAAiBC,KAAjB,IAA0B,IAA3B,CAArC;;AAEA,MAAIC,YAAY,KAAKJ,WAArB,EAAkC;AAChCH,IAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AAED,QAAMQ,SAAS,GAAGV,QAAQ,CAACW,gBAAT,CACf,gBAAeN,WAAW,GAAG,CAAE,cADhB,CAAlB;AAIA,QAAMO,CAAC,GAAGF,SAAS,CAACG,MAApB;AACA,MAAIC,OAAO,GAAGZ,UAAd;;AACA,MAAIA,UAAU,GAAGJ,IAAb,GAAoBc,CAAC,GAAG,CAA5B,EAA+B;AAC7BE,IAAAA,OAAO,GAAG,CAAV;AACD,GAFD,MAEO,IAAIZ,UAAU,GAAGJ,IAAb,GAAoB,CAAxB,EAA2B;AAChCgB,IAAAA,OAAO,GAAGF,CAAC,GAAG,CAAd;AACD,GAFM,MAEA;AACLE,IAAAA,OAAO,GAAGZ,UAAU,GAAGJ,IAAvB;AACD;;AACD,QAAMiB,WAAW,GAAGL,SAAS,CAACI,OAAD,CAA7B;;AACA,MAAIC,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACC,KAAZ;AACD;AACF","sourcesContent":["import {WithLevel, HandlerProps} from '../handlers'\r\nimport handlerPropsValidation from './handlerPropsValidation';\r\n\r\nexport default function levelBelowMove(\r\n  e: any, // KeyboardEvent\r\n  step: -1 | 1,\r\n  handlerProps: HandlerProps\r\n) {\r\n  handlerPropsValidation(e, handlerProps)\r\n  const parentEl: WithLevel<HTMLElement> = e.currentTarget;\r\n  let currentIdx:number = e.target.tabIndex;\r\n  const parentLevel: number = parseInt(parentEl.dataset.level ?? \"-1\");\r\n  const currentLevel: number = parseInt(e.target.dataset.level ?? \"-1\");\r\n\r\n  if (currentLevel === parentLevel) {\r\n    currentIdx = -1;\r\n  }\r\n\r\n  const tabbables = parentEl.querySelectorAll(\r\n    `[data-level=\"${parentLevel + 1}\"][tabIndex]`\r\n  );\r\n\r\n  const l = tabbables.length;\r\n  let nextIdx = currentIdx;\r\n  if (currentIdx + step > l - 1) {\r\n    nextIdx = 0;\r\n  } else if (currentIdx + step < 0) {\r\n    nextIdx = l - 1;\r\n  } else {\r\n    nextIdx = currentIdx + step;\r\n  }\r\n  const nextElement = tabbables[nextIdx] as WithLevel;\r\n  if (nextElement) {\r\n    nextElement.focus();\r\n  }\r\n}\r\n\r\n"],"file":"levelBelowMove.js"}