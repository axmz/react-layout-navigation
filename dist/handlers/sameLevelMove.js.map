{"version":3,"sources":["../../src/handlers/sameLevelMove.tsx"],"names":["handlerPropsValidation","sameLevelMove","e","step","handlerProps","currentEl","target","currentLevel","parseInt","dataset","level","currentIdx","tabIndex","parentLevel","parentEl","closest","tabbables","querySelectorAll","l","length","nextIdx","nextElement","focus"],"mappings":"AACA,OAAOA,sBAAP,MAAmC,0BAAnC;AAEA,eAAe,SAASC,aAAT,CACbC,CADa,EAEbC,IAFa,EAGbC,YAHa,EAIb;AACAJ,EAAAA,sBAAsB,CAACE,CAAD,EAAIE,YAAJ,CAAtB;AACA,QAAMC,SAAoB,GAAGH,CAAC,CAACI,MAA/B;AACA,MAAIC,YAAoB,GAAGC,QAAQ,CAACH,SAAS,CAACI,OAAV,CAAkBC,KAAnB,CAAnC;AACA,MAAIC,UAAkB,GAAGN,SAAS,CAACO,QAAnC;AACA,MAAIC,WAAW,GAAGN,YAAY,GAAG,CAAjC;AACA,QAAMO,QAAQ,GAAGT,SAAS,CAACU,OAAV,CAAmB,gBAAeF,WAAY,IAA9C,CAAjB;AACA,QAAMG,SAAS,GAAGF,QAAQ,CAACG,gBAAT,CACf,gBAAeV,YAAa,cADb,CAAlB;AAIA,QAAMW,CAAC,GAAGF,SAAS,CAACG,MAApB;AACA,MAAIC,OAAO,GAAGT,UAAd;;AACA,MAAIA,UAAU,GAAGR,IAAb,GAAoBe,CAAC,GAAG,CAA5B,EAA+B;AAC7BE,IAAAA,OAAO,GAAG,CAAV;AACD,GAFD,MAEO,IAAIT,UAAU,GAAGR,IAAb,GAAoB,CAAxB,EAA2B;AAChCiB,IAAAA,OAAO,GAAGF,CAAC,GAAG,CAAd;AACD,GAFM,MAEA;AACLE,IAAAA,OAAO,GAAGT,UAAU,GAAGR,IAAvB;AACD;;AACD,QAAMkB,WAAW,GAAGL,SAAS,CAACI,OAAD,CAA7B;;AACA,MAAIC,WAAJ,EAAgB;AACdA,IAAAA,WAAW,CAACC,KAAZ;AACD;AACF","sourcesContent":["import { WithLevel, HandlerProps } from \"../handlers\";\r\nimport handlerPropsValidation from \"./handlerPropsValidation\";\r\n\r\nexport default function sameLevelMove(\r\n  e: any,\r\n  step: -1 | 1,\r\n  handlerProps: HandlerProps,\r\n) {\r\n  handlerPropsValidation(e, handlerProps)\r\n  const currentEl: WithLevel = e.target;\r\n  let currentLevel: number = parseInt(currentEl.dataset.level);\r\n  let currentIdx: number = currentEl.tabIndex;\r\n  let parentLevel = currentLevel - 1;\r\n  const parentEl = currentEl.closest(`[data-level=\"${parentLevel}\"]`) as WithLevel;\r\n  const tabbables = parentEl.querySelectorAll(\r\n    `[data-level=\"${currentLevel}\"][tabIndex]`\r\n  );\r\n\r\n  const l = tabbables.length;\r\n  let nextIdx = currentIdx;\r\n  if (currentIdx + step > l - 1) {\r\n    nextIdx = 0;\r\n  } else if (currentIdx + step < 0) {\r\n    nextIdx = l - 1;\r\n  } else {\r\n    nextIdx = currentIdx + step;\r\n  }\r\n  const nextElement = tabbables[nextIdx] as WithLevel;\r\n  if (nextElement){\r\n    nextElement.focus();\r\n  }\r\n}\r\n"],"file":"sameLevelMove.js"}