{"version":3,"sources":["../../src/handlers/levelsMove.tsx"],"names":["handlerPropsValidation","levelsMove","e","step","handlerProps","currentEl","target","currentLevel","parseInt","dataset","level","parentLevel","parentParentLevel","parentEl","closest","parentParentEl","parentIndex","tabIndex","next","tabbables","querySelectorAll","length","nextElement","focus","callback"],"mappings":"AACA,OAAOA,sBAAP,MAAmC,0BAAnC;AAEA,OAAO,SAASC,UAAT,CAAoBC,CAApB,EAA4BC,IAA5B,EAA0CC,YAA1C,EAAsE;AAC3EJ,EAAAA,sBAAsB,CAACE,CAAD,EAAIE,YAAJ,CAAtB;AAEA,QAAMC,SAAS,GAAGH,CAAC,CAACI,MAApB;AACA,MAAIC,YAAY,GAAGC,QAAQ,CAACH,SAAS,CAACI,OAAV,CAAkBC,KAAnB,CAA3B;AACA,QAAMC,WAAW,GAAGJ,YAAY,KAAK,CAAC,CAAlB,GAAsB,CAAC,CAAvB,GAA2BA,YAAY,GAAG,CAA9D;AACA,QAAMK,iBAAiB,GAAGD,WAAW,KAAK,CAAC,CAAjB,GAAqB,CAAC,CAAtB,GAA0BA,WAAW,GAAG,CAAlE;AACA,QAAME,QAAQ,GAAGR,SAAS,CAACS,OAAV,CAAmB,gBAAeH,WAAY,IAA9C,CAAjB;AACA,QAAMI,cAAc,GAAGF,QAAQ,CAACC,OAAT,CACpB,gBAAeF,iBAAkB,IADb,CAAvB;AAGA,QAAMI,WAAW,GAAGH,QAAQ,CAACI,QAA7B;AACA,QAAMC,IAAI,GAAGX,YAAY,GAAGJ,IAA5B;AACA,MAAIgB,SAAS,GAAG,EAAhB;;AACA,MAAIhB,IAAI,GAAG,CAAX,EAAc;AACZgB,IAAAA,SAAS,GAAGd,SAAS,CAACe,gBAAV,CAA4B,gBAAeF,IAAK,IAAhD,CAAZ;;AACA,QAAIC,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAMC,WAAW,GAAGH,SAAS,CAAC,CAAD,CAA7B;AACAG,MAAAA,WAAW,CAACC,KAAZ;AACD,KAHD,MAGO;AACL;AACA,UAAInB,YAAY,EAAEoB,QAAlB,EAA4B;AAC1BpB,QAAAA,YAAY,CAACoB,QAAb,CAAsBtB,CAAtB;AACD;AACF;AACF,GAXD,MAWO,IAAIC,IAAI,GAAG,CAAX,EAAc;AACnBgB,IAAAA,SAAS,GAAGJ,cAAc,CAACK,gBAAf,CACT,gBAAeF,IAAK,gBAAeF,WAAY,IADtC,CAAZ;;AAGA,QAAIG,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAMC,WAAW,GAAGH,SAAS,CAAC,CAAD,CAA7B;AACAG,MAAAA,WAAW,CAACC,KAAZ;AACD,KAHD,MAGO;AACLV,MAAAA,QAAQ,CAACU,KAAT;AACD;AACF;AACF","sourcesContent":["import { HandlerProps } from \"../handlers\";\r\nimport handlerPropsValidation from \"./handlerPropsValidation\"\r\n\r\nexport function levelsMove(e: any, step: -1 | 1, handlerProps: HandlerProps) {\r\n  handlerPropsValidation(e, handlerProps)\r\n\r\n  const currentEl = e.target;\r\n  let currentLevel = parseInt(currentEl.dataset.level);\r\n  const parentLevel = currentLevel === -1 ? -1 : currentLevel - 1;\r\n  const parentParentLevel = parentLevel === -1 ? -1 : parentLevel - 1;\r\n  const parentEl = currentEl.closest(`[data-level=\"${parentLevel}\"]`);\r\n  const parentParentEl = parentEl.closest(\r\n    `[data-level=\"${parentParentLevel}\"]`\r\n  );\r\n  const parentIndex = parentEl.tabIndex;\r\n  const next = currentLevel + step;\r\n  let tabbables = [];\r\n  if (step > 0) {\r\n    tabbables = currentEl.querySelectorAll(`[data-level=\"${next}\"]`);\r\n    if (tabbables.length > 0) {\r\n      const nextElement = tabbables[0];\r\n      nextElement.focus();\r\n    } else {\r\n      // callback\r\n      if (handlerProps?.callback) {\r\n        handlerProps.callback(e);\r\n      }\r\n    }\r\n  } else if (step < 0) {\r\n    tabbables = parentParentEl.querySelectorAll(\r\n      `[data-level=\"${next}\"][tabIndex=\"${parentIndex}\"]`\r\n    );\r\n    if (tabbables.length > 0) {\r\n      const nextElement = tabbables[0];\r\n      nextElement.focus();\r\n    } else {\r\n      parentEl.focus();\r\n    }\r\n  }\r\n}\r\n"],"file":"levelsMove.js"}